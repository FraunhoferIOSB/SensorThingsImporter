<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>de.fraunhofer.iosb.ilt</groupId>
	<artifactId>SensorThingsImporter</artifactId>
	<version>0.19-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>SensorThingsImporter</name>
    <description>A tool for importing observations from various sources such as CSV files into a SensorThings API compatible service.</description>
    <url>https://github.com/FraunhoferIOSB/SensorThingsImporter</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mainClass>de.fraunhofer.iosb.ilt.sensorthingsimporter.MainApp</mainClass>
		<docker-image-name>fraunhoferiosb/frost-importer</docker-image-name>
		<maven.compiler.source>8</maven.compiler.source>
		<maven.compiler.target>8</maven.compiler.target>

		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-gpg-plugin>3.0.1</maven-gpg-plugin>
		<maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>
		<maven-nexus-staging-plugin>1.6.8</maven-nexus-staging-plugin>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>

		<FROST-Client.version>0.34</FROST-Client.version>
		<commons-collections.version>4.4</commons-collections.version>
		<commons-csv.version>1.8</commons-csv.version>
		<commons-io.version>2.8.0</commons-io.version>
		<commons-dbcp2.version>2.8.0</commons-dbcp2.version>
		<configurable.version>0.30</configurable.version>
		<geotools.version>25.0</geotools.version>
		<groovy.version>3.0.8</groovy.version>
		<git-commit-id-plugin.version>4.0.4</git-commit-id-plugin.version>
		<javax-activation.version>1.1.1</javax-activation.version>
		<junit.version>4.13.2</junit.version>
		<logback.version>1.2.3</logback.version>
		<openjfx.version>16</openjfx.version>
		<postgresql.version>42.2.20</postgresql.version>
		<quartz.version>2.3.2</quartz.version>
	</properties>

	<licenses>
		<license>
			<name>GNU General Public License v3, or (at your option) any later version</name>
			<url>https://www.gnu.org/licenses/gpl-3.0.txt</url>
			<comments>For more information see the LICENSE.txt included with the sources.</comments>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Hylke van der Schaaf</name>
			<email>hylke.vanderschaaf@iosb.fraunhofer.de</email>
			<organization>Fraunhofer IOSB</organization>
			<organizationUrl>https://www.iosb.fraunhofer.de</organizationUrl>
		</developer>
	</developers>

	<organization>
		<name>Fraunhofer IOSB</name>
		<url>http://iosb.fraunhofer.de</url>
	</organization>

	<scm>
		<connection>scm:git:git://github.com/FraunhoferIOSB/SensorThingsImporter.git</connection>
		<developerConnection>scm:git:ssh://github.com:FraunhoferIOSB/SensorThingsImporter.git</developerConnection>
		<url>https://github.com/FraunhoferIOSB/SensorThingsImporter/tree/master</url>
		<tag>HEAD</tag>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/FraunhoferIOSB/SensorThingsImporter/issues</url>
	</issueManagement>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<repositories>
		<repository>
			<id>osgeo</id>
			<name>Open Source Geospatial Foundation Repository</name>
			<url>https://repo.osgeo.org/repository/release/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<transformers>
								<!-- This bit sets the main class for the executable jar as you otherwise -->
								<!-- would with the assembly plugin                                       -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${mainClass}</Main-Class>
									</manifestEntries>
								</transformer>
								<!-- This bit merges the various GeoTools META-INF/services files         -->
								<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>${git-commit-id-plugin.version}</version>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
					<prefix>git</prefix>
					<verbose>false</verbose>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<generateGitPropertiesFilename>${project.build.outputDirectory}/git.json</generateGitPropertiesFilename>
					<format>json</format>
					<gitDescribe>
						<skip>false</skip>
						<always>false</always>
						<dirty>-dirty</dirty>
					</gitDescribe>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>${maven-source-plugin.version}</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
							<excludePackageNames>de.fraunhofer.iosb.ilt.frostserver.parser.path:de.fraunhofer.iosb.ilt.frostserver.parser.query</excludePackageNames>
							<quiet>true</quiet>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>${dockerfile-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>build-and-tag-latest</id>
								<phase>none</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>tag-version</id>
								<phase>none</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
							<execution>
								<id>push-latest</id>
								<phase>none</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<tag>latest</tag>
								</configuration>
							</execution>
							<execution>
								<id>push-version</id>
								<phase>none</phase>
								<goals>
									<goal>push</goal>
								</goals>
								<configuration>
									<tag>${project.version}</tag>
								</configuration>
							</execution>
						</executions>
						<configuration>
							<repository>${docker-image-name}</repository>
							<buildArgs>
								<JAR_FILE>${project.build.finalName}-shaded.jar</JAR_FILE>
							</buildArgs>
						</configuration>
						<dependencies>
							<!-- Java 9 support -->
							<dependency>
								<groupId>javax.activation</groupId>
								<artifactId>activation</artifactId>
								<version>${javax-activation.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${maven-nexus-staging-plugin}</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>false</autoReleaseAfterClose>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>Configurable</artifactId>
			<version>${configurable.version}</version>
		</dependency>
		<dependency>
			<groupId>${project.groupId}</groupId>
			<artifactId>FROST-Client</artifactId>
			<version>${FROST-Client.version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<version>${commons-collections.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>${commons-csv.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-dbcp2</artifactId>
			<version>${commons-dbcp2.version}</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${postgresql.version}</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>${quartz.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${openjfx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${openjfx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-referencing</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-epsg-hsql</artifactId>
			<version>${geotools.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.codehaus.groovy</groupId>
			<artifactId>groovy</artifactId>
			<version>${groovy.version}</version>
		</dependency>
	</dependencies>
</project>
